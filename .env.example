# ===================================
# Telegram Auto-Detection Media Server
# v5.0 - Enhanced Configuration
# ===================================

# ===================
# BOT CONFIGURATION
# ===================

# Option 1: Individual Bot Tokens (Recommended for webhooks)
# Each bot gets its own webhook endpoint for better load distribution
TELEGRAM_BOT_TOKEN_1=1234567890:ABCdefGHIjklMNOpqrSTUvwxYZ123456789
TELEGRAM_BOT_TOKEN_2=1234567890:ABCdefGHIjklMNOpqrSTUvwxYZ987654321
TELEGRAM_BOT_TOKEN_3=1234567890:ABCdefGHIjklMNOpqrSTUvwxYZ111222333
TELEGRAM_BOT_TOKEN_4=1234567890:ABCdefGHIjklMNOpqrSTUvwxYZ444555666
TELEGRAM_BOT_TOKEN_5=1234567890:ABCdefGHIjklMNOpqrSTUvwxYZ777888999

# Option 2: Comma-separated tokens (Alternative method)
# TELEGRAM_BOT_TOKENS=bot1_token,bot2_token,bot3_token,bot4_token,bot5_token

# Option 3: Single bot (Simple setup, but may hit rate limits)
# TELEGRAM_BOT_TOKEN=your_single_bot_token_here

# ====================
# CHANNEL CONFIGURATION
# ====================

# Channels to monitor for new files (comma-separated)
# Use channel IDs (recommended) or usernames
# Channel IDs: Get from @userinfobot or @getidsbot
TELEGRAM_CHANNELS=-1001857003010,-1001234567890,-1001111222333

# Alternative format with usernames (less reliable)
# TELEGRAM_CHANNELS=@movies_channel,@series_channel,@tv_shows_channel

# Individual channel configuration (alternative)
# TELEGRAM_CHANNEL_1=-1001857003010
# TELEGRAM_CHANNEL_2=-1001234567890
# TELEGRAM_CHANNEL_3=-1001111222333

# ===================
# WEBHOOK CONFIGURATION
# ===================

# Webhook secret for security (auto-generated if not provided)
# Use a strong random string for production
WEBHOOK_SECRET=your_super_secret_webhook_key_here_make_it_long_and_random

# Webhook URL base (auto-detected from Render, but can be overridden)
# WEBHOOK_BASE_URL=https://your-app-name.onrender.com

# ==================
# SERVER CONFIGURATION
# ==================

# Port for the server (Render sets this automatically)
PORT=3000

# Environment (production/development)
NODE_ENV=production

# ===================
# FILE DETECTION SETTINGS
# ===================

# Cache TTL in milliseconds (1 hour = 3600000)
CACHE_TTL=3600000

# Fallback scan interval in milliseconds (5 minutes = 300000)
FILE_SCAN_INTERVAL=300000

# Maximum file size to process (in bytes, default: 2GB)
MAX_FILE_SIZE=2147483648

# File types to detect (comma-separated extensions)
ALLOWED_FILE_TYPES=mp4,mkv,avi,mov,wmv,flv,webm,m4v,3gp,ts,m2ts

# ===================
# RATE LIMITING
# ===================

# Delay between requests per bot (milliseconds)
RATE_LIMIT_DELAY=1000

# Maximum requests per bot per minute (Telegram allows ~30, using 20 for safety)
MAX_REQUESTS_PER_BOT_PER_MINUTE=20

# Number of retry attempts on API failures
RETRY_ATTEMPTS=3

# Delay between retry attempts (milliseconds)
RETRY_DELAY=2000

# Bot cooldown period after rate limit hit (milliseconds)
BOT_COOLDOWN_PERIOD=60000

# ===================
# METADATA EXTRACTION
# ===================

# Enable automatic metadata fetching from external APIs
ENABLE_METADATA_FETCHING=true

# TMDB API key for enhanced metadata (optional)
# Get from: https://www.themoviedb.org/settings/api
# TMDB_API_KEY=your_tmdb_api_key_here

# OMDB API key for enhanced metadata (optional)
# Get from: http://www.omdbapi.com/apikey.aspx
# OMDB_API_KEY=your_omdb_api_key_here

# Default poster URLs when no poster found
DEFAULT_MOVIE_POSTER=https://via.placeholder.com/300x450/2c3e50/ecf0f1?text=MOVIE
DEFAULT_SERIES_POSTER=https://via.placeholder.com/300x450/34495e/ecf0f1?text=SERIES

# ===================
# PARSING CONFIGURATION
# ===================

# Keywords to identify series files (comma-separated, case-insensitive)
SERIES_KEYWORDS=season,episode,s01,s02,s03,s04,s05,s06,s07,s08,s09,s10,ep,e01,e02,e03,e04,e05

# Quality indicators to extract (comma-separated)
QUALITY_INDICATORS=480p,720p,1080p,1440p,2160p,4K,BluRay,WEBRip,HDRip,DVDRip,CAMRip,WEB-DL,BDRip

# Words to remove from titles (comma-separated)
TITLE_CLEANUP_WORDS=x264,x265,h264,h265,hevc,aac,ac3,dts,5.1,7.1,rarbg,yts,eztv

# ===================
# LOGGING & MONITORING
# ===================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable file detection logging
ENABLE_DETECTION_LOGGING=true

# ===================
# PERFORMANCE SETTINGS
# ===================

# Maximum number of files to keep in memory cache
MAX_CACHE_SIZE=10000

# Cleanup old cache entries interval (milliseconds)
CACHE_CLEANUP_INTERVAL=1800000

# Maximum catalog items to return per request
MAX_CATALOG_ITEMS=100

# Enable compression for responses
ENABLE_COMPRESSION=true

# ===================
# SECURITY SETTINGS
# ===================

# Enable CORS (should be true for Stremio)
ENABLE_CORS=true

# Allowed origins for CORS (comma-separated, * for all)
CORS_ORIGINS=*

# Request timeout in milliseconds
REQUEST_TIMEOUT=30000

# ===================
# OPTIONAL: PROXY SETTINGS
# ===================

# HTTP proxy (if needed for your region)
# HTTP_PROXY=http://proxy.example.com:8080

# HTTPS proxy (if needed for your region)
# HTTPS_PROXY=https://proxy.example.com:8080

# Proxy authentication (if required)
# PROXY_USERNAME=your_proxy_username
# PROXY_PASSWORD=your_proxy_password

# ===================
# OPTIONAL: DATABASE SETTINGS
# ===================

# Enable persistent storage (saves detected files to disk)
# ENABLE_PERSISTENT_STORAGE=true

# Database file path (for SQLite storage)
# DATABASE_PATH=./detected_files.db

# Auto-backup interval (milliseconds, 24 hours = 86400000)
# BACKUP_INTERVAL=86400000

# ===================
# DEVELOPMENT SETTINGS
# ===================

# Enable debug mode (more verbose logging)
# DEBUG_MODE=false

# Mock Telegram API responses (for testing without real bots)
# MOCK_TELEGRAM_API=false

# Test channel for development
# TEST_CHANNEL=-1001999888777

# ===================
# ADDON CONFIGURATION
# ===================

# Addon manifest settings
ADDON_ID=org.telegram.autodetect
ADDON_VERSION=5.0.0
ADDON_NAME=Auto-Detect Media Collection
ADDON_DESCRIPTION=Automatically detect and stream media from Telegram channels

# Stremio catalog settings
ENABLE_SEARCH=true
CATALOG_PAGE_SIZE=50

# ===================================
# SETUP INSTRUCTIONS
# ===================================

# 1. Get your bot tokens:
#    - Message @BotFather on Telegram
#    - Create multiple bots with /newbot
#    - Copy the tokens to TELEGRAM_BOT_TOKEN_1, _2, etc.

# 2. Get your channel IDs:
#    - Add @userinfobot to your channel
#    - Send a message, bot will reply with channel ID
#    - Use the negative ID (e.g., -1001234567890)

# 3. Make sure your bots are:
#    - Added as administrators to all channels
#    - Have permission to read messages

# 4. Deploy to Render:
#    - Set these environment variables in Render dashboard
#    - The app will automatically set up webhooks

# 5. Install in Stremio:
#    - Copy: https://your-app.onrender.com/manifest.json
#    - Stremio → Addons → Install from URL

# ===================================
