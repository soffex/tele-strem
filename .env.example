# ===================================
# Telegram Pyrogram Stremio Addon
# Environment Configuration
# ===================================

# ===================
# TELEGRAM API CREDENTIALS
# ===================
# Get these from https://my.telegram.org
# Go to API Development Tools and create a new application

API_ID=12345678
API_HASH=your_api_hash_here
PHONE_NUMBER=+1234567890

# ===================
# MONITORED CHANNELS
# ===================
# Comma-separated list of channel IDs or usernames
# Channel IDs: Use @userinfobot to get IDs (like -1001234567890)
# Usernames: Use @channelname format for public channels

MONITORED_CHANNELS=-1001234567890,-1001111222333

# Examples:
# MONITORED_CHANNELS=-1001234567890,-1001111222333,@publicchannel
# MONITORED_CHANNELS=-1001857003010

# ===================
# SERVER CONFIGURATION
# ===================

# Server host and port
HOST=0.0.0.0
PORT=8080

# File paths (relative to container)
SESSION_PATH=./sessions
CACHE_PATH=./cache
DB_PATH=./data/media.db

# ===================
# PERFORMANCE SETTINGS
# ===================

# Streaming chunk size in bytes (default: 1MB)
CHUNK_SIZE=1048576

# Maximum cache size in bytes (default: 5GB)
# Calculate: 5 * 1024 * 1024 * 1024 = 5368709120
MAX_CACHE_SIZE=5368709120

# Cache cleanup interval in seconds (default: 1 hour)
CACHE_CLEANUP_INTERVAL=3600

# ===================
# RATE LIMITING
# ===================

# Maximum concurrent downloads (adjust based on your usage)
# Start with 3, increase if your VPS can handle more
MAX_CONCURRENT_DOWNLOADS=3

# Delay between operations in seconds
# Higher values = more conservative, lower rate limit risk
RATE_LIMIT_DELAY=1.0

# ===================
# ADDON CONFIGURATION
# ===================

# Addon metadata (customize as needed)
ADDON_NAME=Personal Telegram Media
ADDON_VERSION=1.0.0

# ===================
# PERSISTENCE SETTINGS
# ===================

# Heartbeat interval to keep container alive (seconds)
HEARTBEAT_INTERVAL=300

# Auto-save interval for application state (seconds)
AUTO_SAVE_INTERVAL=600

# Keep application data on restart
PERSISTENT_MODE=true

# Backup session data automatically
BACKUP_SESSIONS=true

# ===================
# SETUP INSTRUCTIONS
# ===================

# 1. Copy this file to .env:
#    cp .env.example .env

# 2. Edit .env with your actual values:
#    nano .env

# 3. Get API credentials:
#    - Go to https://my.telegram.org
#    - Login with your phone number
#    - Create new application in API Development Tools
#    - Copy API_ID and API_HASH

# 4. Get channel IDs:
#    - Add @userinfobot to your channel
#    - Send a message, bot replies with channel ID
#    - Use the negative ID (like -1001234567890)

# 5. Deploy:
#    docker-compose up -d

# ===================
# TROUBLESHOOTING
# ===================

# If authentication fails:
# - Verify API_ID and API_HASH are correct
# - Ensure PHONE_NUMBER includes country code (+1234567890)
# - Check that phone number has access to the channels

# If rate limits hit:
# - Reduce MAX_CONCURRENT_DOWNLOADS
# - Increase RATE_LIMIT_DELAY
# - Check container logs for rate limit messages

# If cache issues:
# - Adjust MAX_CACHE_SIZE based on available disk space
# - Lower CACHE_CLEANUP_INTERVAL for more frequent cleanup
# - Monitor disk usage with: du -sh data/cache/

# If memory issues:
# - Reduce CHUNK_SIZE (but not below 64KB)
# - Lower MAX_CONCURRENT_DOWNLOADS
# - Increase container memory limits in docker-compose.yml
